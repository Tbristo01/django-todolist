name: Combined Workflow

on: [push, pull_request]

jobs:
  scanning:
    name: GitGuardian Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        id: gitguardian
        uses: GitGuardian/ggshield-action@v1.20.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  build-and-scan:
    name: Docker Build and JFrog Xray Scan
    runs-on: ubuntu-latest
    needs: scanning
    if: ${{ always() && needs.scanning.result == 'success' }} # Only execute if the "GitGuardian Scan" job was successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t my-django-app .
        # Replace "my-django-app" with your desired image name

      - name: JFrog Xray Scan
        run: |
          # Run JFrog Xray code analysis on the Docker image
          # Replace with your actual JFrog Xray scan command
          # Example: jfrog xray scan my-django-app:latest
          # Ensure you have JFrog CLI and appropriate authentication set up
          echo "Running JFrog Xray code analysis..."
        # You may need to install and configure the JFrog CLI here

      - name: Run Tests
        run: |
          # Example: Run tests that access the Django app using host.docker.internal
          curl http://host.docker.internal:8000
        # Replace with your actual test commands

