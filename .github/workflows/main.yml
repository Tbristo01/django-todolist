name: Combined Workflow

on: [push, pull_request]

jobs:
  scanning:
    name: GitGuardian Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        id: gitguardian
        uses: GitGuardian/ggshield-action@v1.20.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  build:
    name: Docker Build and Run
    runs-on: ubuntu-latest
    needs: scanning
    if: ${{ always() && needs.scanning.result == 'success' }} # Only execute if the "GitGuardian Scan" job was successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t my-django-app .
        # Replace "my-django-app" with your desired image name

      - name: Start Docker Container (if image built)
        run: |
          if docker run -d -p 8000:8000 my-django-app; then
            echo "Docker container started successfully."
          else
            echo "Failed to start Docker container."
            exit 1
          fi
        # Replace "my-django-app" with your desired image name

      - name: Wait for Django to start
        run: sleep 10s  # Adjust the duration as needed to allow the Django app to start

      - name: Run Tests
        run: |
          # Example: Run tests that access the Django app using host.docker.internal
          curl http://host.docker.internal:8000
        # Replace with your actual test commands

      - name: Stop Docker Container
        run: docker stop $(docker ps -q)