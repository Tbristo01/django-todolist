
  provision-ec2:
    runs-on: ubuntu-latest
    needs: publish-image
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.TF_USER_AWS_KEY }}'
          aws-secret-access-key: '${{ secrets.TF_USER_AWS_SECRET }}'
          aws-region: us-east-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Apply
        id:   apply
        env:
          TF_VAR_ec2_name:  "${{ github.event.inputs.ec2_name }}"
        run: |
          terraform init
          terraform validate
          terraform plan 
          terraform apply -auto-approve

  deploy-to-ec2:

    name: Deploy Docker Image to AWS
    runs-on: ubuntu-latest
    needs: [publish-image,provision-ec2]

    steps:
      - name: Set up Node.js v16
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Check if Docker container exists
        id: check-container
        run: |
          if docker ps -aq -f name=my-django-app | grep -q .; then
            echo "Container exists"
            echo "::set-output name=container_exists::true"
          else
            echo "Container does not exist"
            echo "::set-output name=container_exists::false"
          fi
    
      - name: Stop and delete Docker container if it exists
        if: steps.check-container.outputs.container_exists == 'true'
        run: |
          docker stop my-django-app
          docker rm my-django-app
    
      - name: Pull Docker image
        run: docker pull tbristol01/django-todolist:latest
    
      - name: Run Docker Container
        run: sudo docker run -p 8080:8080 --name my-django-app tbristol01/django-todolist
