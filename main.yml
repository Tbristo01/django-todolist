name: Combined Workflow

on: [push, pull_request]

jobs:
  scanning:
    name: GitGuardian Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        id: gitguardian
        uses: GitGuardian/ggshield-action@v1.20.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: scanning
    if: ${{ always() && needs.scanning.result == 'success' }} # Only execute if the "GitGuardian Scan" job was successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Docker image
        run: docker build -t my-django-app .
        # Replace "my-django-app" with your desired image name
      - name: Run Docker Container (if image built)
        run: |
          if docker run -d -p 8000:8000 my-django-app; then
            echo "Docker container started successfully."
          else
            echo "Failed to start Docker container."
            exit 1
          fi
        # Replace "my-django-app" with your desired image name

  scan-image:
    name: Scan Image Vulnerability
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
      - name: Scan the Docker image for vulnerabilities
        run: echo "Hello Word!"
        # Replace "my-django-app" with your desired image name

  static-code-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: "python" # Assuming it's a Django/Python project. Adjust accordingly.
      - name: Run CodeQL
        uses: github/codeql-action/analyze@v1